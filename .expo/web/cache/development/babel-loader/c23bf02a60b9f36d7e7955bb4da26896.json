{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Projetos\\\\Android\\\\ReactNative\\\\educred\\\\src\\\\navegacao\\\\AuthStack.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport TelaEmbarque from \"../pages/TelaEmbarque\";\nimport TelaInicial from \"../pages/TelaInicial\";\nimport LoginTutor from \"../pages/Tutor/LoginTutor\";\nimport CadastrarTutor from \"../pages/Tutor/CadastrarTutor\";\nimport LoginJogador from \"../pages/Jogador/LoginJogador\";\nimport CadastrarJogador from \"../pages/Jogador/CadastrarJogador\";\nimport { FontAwesome, Entypo } from \"@expo/vector-icons\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar Stack = createStackNavigator();\n\nvar AuthStack = function AuthStack() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFirstLaunch = _useState2[0],\n      setIsFirstLaunch = _useState2[1];\n\n  var routeName;\n  useEffect(function () {\n    AsyncStorage.getItem('alreadyLaunched').then(function (value) {\n      if (value == null) {\n        AsyncStorage.setItem('alreadyLaunched', 'true');\n        setIsFirstLaunch(true);\n      } else {\n        setIsFirstLaunch(false);\n      }\n    });\n  }, []);\n\n  if (isFirstLaunch === null) {\n    return null;\n  } else if (isFirstLaunch == true) {\n    routeName = 'TelaEmbarque';\n  } else {\n    routeName = 'TelaInicial';\n  }\n\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: routeName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"TelaEmbarque\",\n    component: TelaEmbarque,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TelaInicial\",\n    component: TelaInicial,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login Tutor\",\n    component: LoginTutor,\n    options: function options(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        title: '',\n        headerStyle: {\n          backgroundColor: 'blue',\n          shadowColor: '#f9fafd',\n          elevation: 0\n        },\n        headerLeft: function headerLeft() {\n          return React.createElement(View, {\n            style: {\n              marginLeft: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }\n          }, React.createElement(FontAwesome.Button, {\n            name: \"long-arrow-left\",\n            size: 25,\n            backgroundColor: \"#f9fafd\",\n            color: \"#333\",\n            onPress: function onPress() {\n              return navigation.navigate('TelaInicial');\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }\n          }));\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login Jogador\",\n    component: LoginJogador,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: '',\n        headerStyle: {\n          backgroundColor: 'blue',\n          shadowColor: '#f9fafd',\n          elevation: 0\n        },\n        headerLeft: function headerLeft() {\n          return React.createElement(View, {\n            style: {\n              marginLeft: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }\n          }, React.createElement(FontAwesome.Button, {\n            name: \"long-arrow-left\",\n            size: 25,\n            backgroundColor: \"#f9fafd\",\n            color: \"#333\",\n            onPress: function onPress() {\n              return navigation.navigate('TelaInicial');\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }\n          }));\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Cadastrar Tutor\",\n    component: CadastrarTutor,\n    options: function options(_ref3) {\n      var navigation = _ref3.navigation;\n      return {\n        title: '',\n        headerStyle: {\n          backgroundColor: 'blue',\n          shadowColor: '#f9fafd',\n          elevation: 0\n        },\n        headerLeft: function headerLeft() {\n          return React.createElement(View, {\n            style: {\n              marginLeft: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 11\n            }\n          }, React.createElement(FontAwesome.Button, {\n            name: \"long-arrow-left\",\n            size: 25,\n            backgroundColor: \"#f9fafd\",\n            color: \"#333\",\n            onPress: function onPress() {\n              return navigation.navigate('Login Tutor');\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }\n          }));\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Cadastrar Jogador\",\n    component: CadastrarJogador,\n    options: function options(_ref4) {\n      var navigation = _ref4.navigation;\n      return {\n        title: '',\n        headerStyle: {\n          backgroundColor: 'blue',\n          shadowColor: '#f9fafd',\n          elevation: 0\n        },\n        headerLeft: function headerLeft() {\n          return React.createElement(View, {\n            style: {\n              marginLeft: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 11\n            }\n          }, React.createElement(FontAwesome.Button, {\n            name: \"long-arrow-left\",\n            size: 25,\n            backgroundColor: \"#f9fafd\",\n            color: \"#333\",\n            onPress: function onPress() {\n              return navigation.navigate('Login Jogador');\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }\n          }));\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AuthStack;","map":{"version":3,"sources":["F:/Projetos/Android/ReactNative/educred/src/navegacao/AuthStack.js"],"names":["React","useState","useEffect","createStackNavigator","TelaEmbarque","TelaInicial","LoginTutor","CadastrarTutor","LoginJogador","CadastrarJogador","FontAwesome","Entypo","AsyncStorage","Stack","AuthStack","isFirstLaunch","setIsFirstLaunch","routeName","getItem","then","value","setItem","header","headerShown","navigation","title","headerStyle","backgroundColor","shadowColor","elevation","headerLeft","marginLeft","navigate"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport TelaEmbarque from '../pages/TelaEmbarque';\nimport TelaInicial from '../pages/TelaInicial';\nimport LoginTutor from '../pages/Tutor/LoginTutor';\nimport CadastrarTutor from '../pages/Tutor/CadastrarTutor';\nimport LoginJogador from '../pages/Jogador/LoginJogador';\nimport CadastrarJogador from '../pages/Jogador/CadastrarJogador';\n\nimport { FontAwesome, Entypo } from 'react-native-vector-icons';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Stack = createStackNavigator();\n\nconst AuthStack = () => {\n  const [isFirstLaunch, setIsFirstLaunch] = useState(null);\n  let routeName;\n\n  useEffect(() => {\n    AsyncStorage.getItem('alreadyLaunched').then((value) => {\n      if (value == null) {\n        AsyncStorage.setItem('alreadyLaunched', 'true'); // No need to wait for `setItem` to finish, although you might want to handle errors\n        setIsFirstLaunch(true);\n      } else {\n        setIsFirstLaunch(false);\n      }\n    }); // Add some error handling, also you can simply do setIsFirstLaunch(null)\n  }, []);\n\n  if (isFirstLaunch === null) {\n    return null; // Mudar \"false\" para \"true\", para mostrar tela de embarque só no primeiro acesso ao App. This is the 'tricky' part: The query to AsyncStorage is not finished, but we have to present something to the user. Null will just render nothing, so you can also put a placeholder of some sort, but effectively the interval between the first mount and AsyncStorage retrieving your data won't be noticeable to the user. But if you want to display anything then you can use a LOADER here\n  } else if (isFirstLaunch == true) {\n    routeName = 'TelaEmbarque';\n  } else {\n    routeName = 'TelaInicial';\n  }\n\n  return (\n    <Stack.Navigator initialRouteName={routeName}>\n      <Stack.Screen\n        name=\"TelaEmbarque\"\n        component={TelaEmbarque}\n        options={{header: () => null}}\n      />\n      <Stack.Screen\n      name=\"TelaInicial\"\n      component={TelaInicial}\n      options={{\n        headerShown: false,\n      }}\n      />\n      <Stack.Screen\n      name=\"Login Tutor\"\n      component={LoginTutor}\n      options={({navigation}) => ({\n        title: '',\n        headerStyle: {\n          backgroundColor: 'blue',\n          shadowColor: '#f9fafd',\n          elevation: 0,\n        },\n        headerLeft: () => (\n          <View style={{marginLeft: 10}}>\n            <FontAwesome.Button \n              name=\"long-arrow-left\"\n              size={25}\n              backgroundColor=\"#f9fafd\"\n              color=\"#333\"\n              onPress={() => navigation.navigate('TelaInicial')}\n            />\n          </View>\n        ),\n      })}\n      />\n      <Stack.Screen\n      name=\"Login Jogador\"\n      component={LoginJogador}\n      options={({navigation}) => ({\n        title: '',\n        headerStyle: {\n          backgroundColor: 'blue',\n          shadowColor: '#f9fafd',\n          elevation: 0,\n        },\n        headerLeft: () => (\n          <View style={{marginLeft: 10}}>\n            <FontAwesome.Button \n              name=\"long-arrow-left\"\n              size={25}\n              backgroundColor=\"#f9fafd\"\n              color=\"#333\"\n              onPress={() => navigation.navigate('TelaInicial')}\n            />\n          </View>\n        ),\n      })}\n      />\n      <Stack.Screen\n      name=\"Cadastrar Tutor\"\n      component={CadastrarTutor}\n      options={({navigation}) => ({\n        title: '',\n        headerStyle: {\n          backgroundColor: 'blue',\n          shadowColor: '#f9fafd',\n          elevation: 0,\n        },\n        headerLeft: () => (\n          <View style={{marginLeft: 10}}>\n            <FontAwesome.Button \n              name=\"long-arrow-left\"\n              size={25}\n              backgroundColor=\"#f9fafd\"\n              color=\"#333\"\n              onPress={() => navigation.navigate('Login Tutor')}\n            />\n          </View>\n        ),\n      })}\n      />\n      <Stack.Screen\n      name=\"Cadastrar Jogador\"\n      component={CadastrarJogador}\n      options={({navigation}) => ({\n        title: '',\n        headerStyle: {\n          backgroundColor: 'blue',\n          shadowColor: '#f9fafd',\n          elevation: 0,\n        },\n        headerLeft: () => (\n          <View style={{marginLeft: 10}}>\n            <FontAwesome.Button \n              name=\"long-arrow-left\"\n              size={25}\n              backgroundColor=\"#f9fafd\"\n              color=\"#333\"\n              onPress={() => navigation.navigate('Login Jogador')}\n            />\n          </View>\n        ),\n      })}\n      />\n    </Stack.Navigator>\n  );\n};\n\nexport default AuthStack;\n"]},"metadata":{},"sourceType":"module"}